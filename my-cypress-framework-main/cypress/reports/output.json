{
  "stats": {
    "suites": 47,
    "tests": 164,
    "passes": 153,
    "pending": 9,
    "failures": 2,
    "start": "2021-08-08T18:09:16.123Z",
    "end": "2021-08-08T18:16:24.365Z",
    "duration": 245900,
    "testsRegistered": 164,
    "passPercent": 93.29268292682927,
    "pendingPercent": 5.487804878048781,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c2dfd7cb-dade-4706-839a-695fe5cf70ae",
      "title": "",
      "fullFile": "cypress/integration/1-getting-started/todo.spec.js",
      "file": "cypress/integration/1-getting-started/todo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b682f00f-d328-4e57-b701-857121d6d34d",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 2258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2); // We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "2a7071bf-7833-41aa-abf1-f043dfb6057f",
              "parentUUID": "b682f00f-d328-4e57-b701-857121d6d34d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat'; // Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`); // Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "08836351-760f-4a93-ae36-cf422c8e8eed",
              "parentUUID": "b682f00f-d328-4e57-b701-857121d6d34d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check(); // Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "8dcedd67-c9db-4ae2-b9d3-33862348fecb",
              "parentUUID": "b682f00f-d328-4e57-b701-857121d6d34d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "870160b6-c471-441f-8a35-76415d61f2b1",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 398,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click(); // After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog'); // For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "7d510f75-4b4a-44ca-82b7-6bd5a433dadf",
                  "parentUUID": "870160b6-c471-441f-8a35-76415d61f2b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "3d30b4c3-9db8-45f8-8a60-b8e774209a5a",
                  "parentUUID": "870160b6-c471-441f-8a35-76415d61f2b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 408,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click(); // Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill'); // Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "b497b1e9-1240-4967-89bb-1e1eafe0de28",
                  "parentUUID": "870160b6-c471-441f-8a35-76415d61f2b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d510f75-4b4a-44ca-82b7-6bd5a433dadf",
                "3d30b4c3-9db8-45f8-8a60-b8e774209a5a",
                "b497b1e9-1240-4967-89bb-1e1eafe0de28"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1216,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "2a7071bf-7833-41aa-abf1-f043dfb6057f",
            "08836351-760f-4a93-ae36-cf422c8e8eed",
            "8dcedd67-c9db-4ae2-b9d3-33862348fecb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a0fb8e9e-e397-45b8-a3dd-e39cf636fbc1",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/actions.spec.js",
      "file": "cypress/integration/2-advanced-examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "af917427-7d13-4d0d-853b-827c1bf4edce",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "e30ee164-7877-461d-bf67-e936dec1821c",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "aed71c46-0186-4ff4-a8f5-1d369c252602",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 531,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "e3e173a1-4b5b-44ac-a7fc-f750d0a96a7b",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "3241f5b2-d771-4cc3-96c6-f42b71f9fc7e",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "bef459a3-f93d-4703-bf26-c43d165892f5",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "71030bc6-d2fc-4afd-bc8e-3499fe85d181",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "b20bd72f-380e-4ba2-81ba-2ed6993efba4",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "7e06985c-223e-487e-88f1-6226d8599f9b",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "3e1ea47d-62d9-4617-9d6d-665697d8f3d2",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1037,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "7cd22265-ff12-4a1d-a0fe-6af413d679b9",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "931ac5a9-d55f-4aa6-8e52-4ccc02eb55f3",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "2dd95ee3-bd5a-45de-ab4b-52a21f06fb29",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "2025ab52-57a8-4230-aca4-154a351c1c8b",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "bcecbc9d-8c45-40ce-9340-70564ed77429",
              "parentUUID": "af917427-7d13-4d0d-853b-827c1bf4edce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e30ee164-7877-461d-bf67-e936dec1821c",
            "aed71c46-0186-4ff4-a8f5-1d369c252602",
            "e3e173a1-4b5b-44ac-a7fc-f750d0a96a7b",
            "3241f5b2-d771-4cc3-96c6-f42b71f9fc7e",
            "bef459a3-f93d-4703-bf26-c43d165892f5",
            "71030bc6-d2fc-4afd-bc8e-3499fe85d181",
            "b20bd72f-380e-4ba2-81ba-2ed6993efba4",
            "7e06985c-223e-487e-88f1-6226d8599f9b",
            "3e1ea47d-62d9-4617-9d6d-665697d8f3d2",
            "7cd22265-ff12-4a1d-a0fe-6af413d679b9",
            "931ac5a9-d55f-4aa6-8e52-4ccc02eb55f3",
            "2dd95ee3-bd5a-45de-ab4b-52a21f06fb29",
            "2025ab52-57a8-4230-aca4-154a351c1c8b",
            "bcecbc9d-8c45-40ce-9340-70564ed77429"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c7c4d8f7-5d68-41a3-8540-1c92846cdad8",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/aliasing.spec.js",
      "file": "cypress/integration/2-advanced-examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3473a56c-5abd-4ecd-8e02-ae91d623d48a",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "1ac0eef5-4542-437a-9f40-c8d461fc87dc",
              "parentUUID": "3473a56c-5abd-4ecd-8e02-ae91d623d48a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "032ef88a-9975-4b5e-9a8a-2a43fe1d3273",
              "parentUUID": "3473a56c-5abd-4ecd-8e02-ae91d623d48a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ac0eef5-4542-437a-9f40-c8d461fc87dc",
            "032ef88a-9975-4b5e-9a8a-2a43fe1d3273"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1901,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d1f2d3f-f9e9-4dfa-9c38-71112978ffb0",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/assertions.spec.js",
      "file": "cypress/integration/2-advanced-examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e7f55ef-2af0-4537-a5ca-6a785dfa95c8",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "39935dbd-a044-4097-b930-4d134fd7c6b5",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 825,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "5bb7de5d-66a1-441d-b2e0-80bd429a8c1d",
                  "parentUUID": "39935dbd-a044-4097-b930-4d134fd7c6b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 193,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "e19cd99e-3abe-45bf-aaa9-c192dbd0976c",
                  "parentUUID": "39935dbd-a044-4097-b930-4d134fd7c6b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bb7de5d-66a1-441d-b2e0-80bd429a8c1d",
                "e19cd99e-3abe-45bf-aaa9-c192dbd0976c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1018,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 190,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "042700f8-8102-4522-84fc-60c6945c507c",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  const texts = $p.map((i, el) => Cypress.$(el).text()); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "9cf0bb4a-1165-4d8d-9628-8af9edddcc9c",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "c3c3eee9-cb3b-4c0c-be6f-2a665d570f6a",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 252,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "777502dd-39e0-45bf-a465-25bc3abefb44",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "c6ef8ca5-1d35-4895-89dd-f9a97136b454",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 169,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "9dba674c-1331-4b9d-a023-cf8236804a37",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1664,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "27c0114c-63bf-4a07-8488-5c36161109f8",
                  "parentUUID": "23ad9c97-1fa8-4e62-9b73-82398a103bca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "042700f8-8102-4522-84fc-60c6945c507c",
                "9cf0bb4a-1165-4d8d-9628-8af9edddcc9c",
                "c3c3eee9-cb3b-4c0c-be6f-2a665d570f6a",
                "777502dd-39e0-45bf-a465-25bc3abefb44",
                "c6ef8ca5-1d35-4895-89dd-f9a97136b454",
                "9dba674c-1331-4b9d-a023-cf8236804a37",
                "27c0114c-63bf-4a07-8488-5c36161109f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2853,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5465853b-548d-4600-92c2-16c6e1f5ab17",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/connectors.spec.js",
      "file": "cypress/integration/2-advanced-examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06ddc9fe-9761-45dc-8f82-815d376b1972",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "771cdc8e-52cd-4f13-a741-62ed3dae9ba8",
              "parentUUID": "06ddc9fe-9761-45dc-8f82-815d376b1972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "951edc9d-7294-4842-a8c5-2d8e4665a715",
              "parentUUID": "06ddc9fe-9761-45dc-8f82-815d376b1972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "90456ca7-3a16-4158-9992-7be725c1a3d4",
              "parentUUID": "06ddc9fe-9761-45dc-8f82-815d376b1972",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "2c3041b9-4951-4643-b89c-45a7a47a6755",
              "parentUUID": "06ddc9fe-9761-45dc-8f82-815d376b1972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f0f39f34-7bdd-4445-8e61-f5f138752662",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 315,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "806f8ab5-4f5e-415f-9212-c34ced58d83b",
                  "parentUUID": "f0f39f34-7bdd-4445-8e61-f5f138752662",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 215,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "ddb663dc-b138-43a0-b241-415c33d26bc8",
                  "parentUUID": "f0f39f34-7bdd-4445-8e61-f5f138752662",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 253,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "c653418b-797f-4243-af40-87cce1dbb43a",
                  "parentUUID": "f0f39f34-7bdd-4445-8e61-f5f138752662",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "cc0bd989-d7ad-42d6-913b-f66347bd96cd",
                  "parentUUID": "f0f39f34-7bdd-4445-8e61-f5f138752662",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "806f8ab5-4f5e-415f-9212-c34ced58d83b",
                "ddb663dc-b138-43a0-b241-415c33d26bc8",
                "c653418b-797f-4243-af40-87cce1dbb43a",
                "cc0bd989-d7ad-42d6-913b-f66347bd96cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 968,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "771cdc8e-52cd-4f13-a741-62ed3dae9ba8",
            "951edc9d-7294-4842-a8c5-2d8e4665a715",
            "90456ca7-3a16-4158-9992-7be725c1a3d4",
            "2c3041b9-4951-4643-b89c-45a7a47a6755"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "daa0f573-40a7-4744-929e-d06ec30fac7a",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cookies.spec.js",
      "file": "cypress/integration/2-advanced-examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c217b9e2-2647-4382-ad44-149f88b8f604",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "fab370a4-0d59-4b2e-9947-43a33ccea279",
              "parentUUID": "c217b9e2-2647-4382-ad44-149f88b8f604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "9a0a4d64-852f-46b4-9110-5ebdaf6de336",
              "parentUUID": "c217b9e2-2647-4382-ad44-149f88b8f604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "b2de6b31-91ae-4b3b-9a53-73f8ecd2e4e1",
              "parentUUID": "c217b9e2-2647-4382-ad44-149f88b8f604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "aa28ce63-c8d7-4cda-953a-e6e48261e8dd",
              "parentUUID": "c217b9e2-2647-4382-ad44-149f88b8f604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "42a5940b-7367-416d-a7f5-1b786c71f07b",
              "parentUUID": "c217b9e2-2647-4382-ad44-149f88b8f604",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fab370a4-0d59-4b2e-9947-43a33ccea279",
            "9a0a4d64-852f-46b4-9110-5ebdaf6de336",
            "b2de6b31-91ae-4b3b-9a53-73f8ecd2e4e1",
            "aa28ce63-c8d7-4cda-953a-e6e48261e8dd",
            "42a5940b-7367-416d-a7f5-1b786c71f07b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c9f50ff-611f-4836-8ddf-3b0c945aa321",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "file": "cypress/integration/2-advanced-examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "221eeef5-2f27-4b8e-b847-d00d03c4c1d5",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "41a312f0-8db9-41a5-8a9a-62b7e423b6fe",
              "parentUUID": "221eeef5-2f27-4b8e-b847-d00d03c4c1d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41a312f0-8db9-41a5-8a9a-62b7e423b6fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 518,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f0f3583-ccc0-4a27-b843-f5faa402f5ba",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "53c14608-966c-445f-af8b-eb96d1029bf2",
              "parentUUID": "2f0f3583-ccc0-4a27-b843-f5faa402f5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "7e1d15fc-47ae-40cf-a1d0-c4685c9a24b9",
              "parentUUID": "2f0f3583-ccc0-4a27-b843-f5faa402f5ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "0ce1b697-a635-4888-8888-3e13b0d59910",
              "parentUUID": "2f0f3583-ccc0-4a27-b843-f5faa402f5ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53c14608-966c-445f-af8b-eb96d1029bf2",
            "7e1d15fc-47ae-40cf-a1d0-c4685c9a24b9",
            "0ce1b697-a635-4888-8888-3e13b0d59910"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1be086de-c55a-47b7-a4e8-f14e446ed1d4",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "c5f76d61-6049-46e6-879e-80fde810e0ed",
              "parentUUID": "1be086de-c55a-47b7-a4e8-f14e446ed1d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5f76d61-6049-46e6-879e-80fde810e0ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a6c225c4-8038-4ad3-9b62-3213f2096354",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "350f00bf-87c0-4b8a-8627-1a97b6f60a00",
              "parentUUID": "a6c225c4-8038-4ad3-9b62-3213f2096354",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "350f00bf-87c0-4b8a-8627-1a97b6f60a00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 211,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f2b74aa-54d1-4743-9b84-3995df6d2e4b",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "2df3e176-2983-41ab-998c-f6c829c5b9e8",
              "parentUUID": "0f2b74aa-54d1-4743-9b84-3995df6d2e4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2df3e176-2983-41ab-998c-f6c829c5b9e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45cde17e-2134-4017-94f4-a95c537fdb04",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "b29fe6bf-44d2-4a30-8178-741c158ec5ec",
              "parentUUID": "45cde17e-2134-4017-94f4-a95c537fdb04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b29fe6bf-44d2-4a30-8178-741c158ec5ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9a2b69dc-4ecc-4c2f-a8d0-c67e6c91c459",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "ce96ea40-54a9-49d2-9584-5fbea9195d53",
              "parentUUID": "9a2b69dc-4ecc-4c2f-a8d0-c67e6c91c459",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce96ea40-54a9-49d2-9584-5fbea9195d53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 140,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ffeca9d-632a-483d-a851-3e1df5ceda7b",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "6e06e11b-1c99-410c-9d66-87663a685e3b",
              "parentUUID": "8ffeca9d-632a-483d-a851-3e1df5ceda7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e06e11b-1c99-410c-9d66-87663a685e3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7bf5551b-dd41-4ffd-bed0-de668fd4aff1",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "f7be650d-f84c-40d6-ae3b-909dc6955dd8",
              "parentUUID": "7bf5551b-dd41-4ffd-bed0-de668fd4aff1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7be650d-f84c-40d6-ae3b-909dc6955dd8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "575f7e13-de2a-47a2-bda2-d4d363d82d6f",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "dbd048b5-9b29-4b65-aefd-ef5f9f9a052c",
              "parentUUID": "575f7e13-de2a-47a2-bda2-d4d363d82d6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbd048b5-9b29-4b65-aefd-ef5f9f9a052c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9c569fb6-cd8b-4afa-bda9-2bd4b5d50a17",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/files.spec.js",
      "file": "cypress/integration/2-advanced-examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ebea27c-d061-4137-aeda-b82eefae9d68",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "b9c39f1b-fb8a-45fe-bdb9-674d332e0b47",
              "parentUUID": "6ebea27c-d061-4137-aeda-b82eefae9d68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "e34885cb-bd31-40a3-a56f-3b29673bb536",
              "parentUUID": "6ebea27c-d061-4137-aeda-b82eefae9d68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(json => {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "998d92ac-5622-462c-8489-e29972c706e2",
              "parentUUID": "6ebea27c-d061-4137-aeda-b82eefae9d68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "77173c3b-ef6c-4237-b0a9-a29d71680671",
              "parentUUID": "6ebea27c-d061-4137-aeda-b82eefae9d68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9c39f1b-fb8a-45fe-bdb9-674d332e0b47",
            "e34885cb-bd31-40a3-a56f-3b29673bb536",
            "998d92ac-5622-462c-8489-e29972c706e2",
            "77173c3b-ef6c-4237-b0a9-a29d71680671"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a49c642-f43b-402e-9a94-b224f663de7e",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/local_storage.spec.js",
      "file": "cypress/integration/2-advanced-examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4cf6fca1-1309-46e9-90e2-825352583420",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear key matching string in Local Storage\ncy.clearLocalStorage('prop1').should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click().should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.clearLocalStorage(/prop1|2/).should(ls => {\n  expect(ls.getItem('prop1')).to.be.null;\n  expect(ls.getItem('prop2')).to.be.null;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "68265c07-a2c7-4ed1-8c43-0f7955522eb5",
              "parentUUID": "4cf6fca1-1309-46e9-90e2-825352583420",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68265c07-a2c7-4ed1-8c43-0f7955522eb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 858,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4182729b-4f8c-4c4f-84e4-a005a09666ce",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/location.spec.js",
      "file": "cypress/integration/2-advanced-examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf5fba2d-1281-49b7-a9f4-a08c09a198b7",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "5b63f2c7-fca3-45e8-a3b7-6edfb837f545",
              "parentUUID": "bf5fba2d-1281-49b7-a9f4-a08c09a198b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "03871e53-b826-41c6-a925-c4def9dd4765",
              "parentUUID": "bf5fba2d-1281-49b7-a9f4-a08c09a198b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "3c377697-cb59-4323-b239-f3c03b72f269",
              "parentUUID": "bf5fba2d-1281-49b7-a9f4-a08c09a198b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b63f2c7-fca3-45e8-a3b7-6edfb837f545",
            "03871e53-b826-41c6-a925-c4def9dd4765",
            "3c377697-cb59-4323-b239-f3c03b72f269"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 742,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "aadc3159-de77-4d51-8c80-f076da7eca7f",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/misc.spec.js",
      "file": "cypress/integration/2-advanced-examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd24457c-088b-4649-ab6d-e955441ccc49",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(() => {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "34a7e977-8f5e-4464-be88-7a6a06742dff",
              "parentUUID": "cd24457c-088b-4649-ab6d-e955441ccc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 1412,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "9cf85949-473c-46f3-b903-6eb644095cd5",
              "parentUUID": "cd24457c-088b-4649-ab6d-e955441ccc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "fbf3d6e5-74c0-4685-a996-5947730fa1a4",
              "parentUUID": "cd24457c-088b-4649-ab6d-e955441ccc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "d464c43b-4838-47a9-a776-29709d80f37d",
              "parentUUID": "cd24457c-088b-4649-ab6d-e955441ccc49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c331d906-8515-46ed-8f53-9dbff3024ac7",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1625,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "fdcecaad-e585-4593-8dde-15d6f3babf1a",
                  "parentUUID": "c331d906-8515-46ed-8f53-9dbff3024ac7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "01c8e982-5135-4422-999a-58438f40353f",
                  "parentUUID": "c331d906-8515-46ed-8f53-9dbff3024ac7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fdcecaad-e585-4593-8dde-15d6f3babf1a",
                "01c8e982-5135-4422-999a-58438f40353f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1812,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "34a7e977-8f5e-4464-be88-7a6a06742dff",
            "9cf85949-473c-46f3-b903-6eb644095cd5",
            "fbf3d6e5-74c0-4685-a996-5947730fa1a4",
            "d464c43b-4838-47a9-a776-29709d80f37d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0b3dc109-7c8a-42ee-895f-a857a9c18bb5",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/navigation.spec.js",
      "file": "cypress/integration/2-advanced-examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fa392ae7-16fa-4f55-8e27-2e8976bf5167",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "132bfbe0-5999-4a65-a505-8b7c4efa9093",
              "parentUUID": "fa392ae7-16fa-4f55-8e27-2e8976bf5167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "6edab2ad-c9fe-4d50-aeaa-1f606fc1e427",
              "parentUUID": "fa392ae7-16fa-4f55-8e27-2e8976bf5167",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "8e8fdce8-905b-4788-bf6b-00ff94a6b855",
              "parentUUID": "fa392ae7-16fa-4f55-8e27-2e8976bf5167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "132bfbe0-5999-4a65-a505-8b7c4efa9093",
            "6edab2ad-c9fe-4d50-aeaa-1f606fc1e427",
            "8e8fdce8-905b-4788-bf6b-00ff94a6b855"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "083f83ec-821c-4c41-a8f2-a0a4906d82f5",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/network_requests.spec.js",
      "file": "cypress/integration/2-advanced-examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "776715ca-a515-421b-9552-7818021e0c50",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "ffb48ec8-59c7-4f13-9a57-79fc067603b0",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "961c4c12-7422-454c-a3b5-dfe7324e2096",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "5a5dad27-380a-451b-8b02-f308c3c0c436",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "eea88600-6fa0-4ec1-9523-2d7718387072",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "6ef09eb3-b294-4ea0-9b6d-b97ca2269970",
              "parentUUID": "cdfda621-7950-4d7f-b51b-673fa75b3efe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "776715ca-a515-421b-9552-7818021e0c50",
            "ffb48ec8-59c7-4f13-9a57-79fc067603b0",
            "961c4c12-7422-454c-a3b5-dfe7324e2096",
            "5a5dad27-380a-451b-8b02-f308c3c0c436",
            "eea88600-6fa0-4ec1-9523-2d7718387072",
            "6ef09eb3-b294-4ea0-9b6d-b97ca2269970"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "feef5707-5277-4380-8652-15062610dada",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/querying.spec.js",
      "file": "cypress/integration/2-advanced-examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7134141e-6441-46a0-9b50-b8bd6860c14d",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "dd23c6a9-acad-4de3-82b4-ce7b8afed0d2",
              "parentUUID": "7134141e-6441-46a0-9b50-b8bd6860c14d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "5976ddca-ecab-42dc-8916-44a196096911",
              "parentUUID": "7134141e-6441-46a0-9b50-b8bd6860c14d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "94d7cd13-2f7f-4422-ba53-119a35df4c8b",
              "parentUUID": "7134141e-6441-46a0-9b50-b8bd6860c14d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "4c7125cb-c97a-40f9-a1a9-d710c082747d",
              "parentUUID": "7134141e-6441-46a0-9b50-b8bd6860c14d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "c311d097-5b07-4a22-83d3-03e7754feec8",
              "parentUUID": "7134141e-6441-46a0-9b50-b8bd6860c14d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd23c6a9-acad-4de3-82b4-ce7b8afed0d2",
            "5976ddca-ecab-42dc-8916-44a196096911",
            "94d7cd13-2f7f-4422-ba53-119a35df4c8b",
            "4c7125cb-c97a-40f9-a1a9-d710c082747d",
            "c311d097-5b07-4a22-83d3-03e7754feec8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d2731286-bfbb-4133-9070-79e6d222e823",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/2-advanced-examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0d7bfc56-5b02-4945-a898-7002f54f3679",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "365311e3-3925-4107-b584-7926d0b73040",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "f087fb83-f938-45a2-939f-13a800476395",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "40163123-1394-4dd7-a504-2321d7336a17",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "125dd484-de84-4749-8e6a-8e221df021c1",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "9636df89-62dd-4b6d-9c48-6dc36d681516",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "29d22d31-bb78-49cc-b3e6-b88bdffd77aa",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nconst isLessThan = limit => x => x < limit; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "5e0bcd55-2bf5-484c-b7e9-2aadcf627ff7",
              "parentUUID": "0d7bfc56-5b02-4945-a898-7002f54f3679",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "365311e3-3925-4107-b584-7926d0b73040",
            "f087fb83-f938-45a2-939f-13a800476395",
            "40163123-1394-4dd7-a504-2321d7336a17",
            "125dd484-de84-4749-8e6a-8e221df021c1",
            "9636df89-62dd-4b6d-9c48-6dc36d681516",
            "29d22d31-bb78-49cc-b3e6-b88bdffd77aa",
            "5e0bcd55-2bf5-484c-b7e9-2aadcf627ff7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3719,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "67ed43d2-ae33-4560-8a3b-f2a77f3e38ea",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/traversal.spec.js",
      "file": "cypress/integration/2-advanced-examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8cd23796-69af-4e46-a9ab-c22161b63b29",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 508,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "7df243b7-1f63-4b84-9733-b15ef92e729c",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "e3d02773-11f5-4dea-ae18-809f463dff8a",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "e18ebad1-892e-46b6-af92-813dccbe562d",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "85c08fdc-b1d1-4287-b484-4a0e7b024a68",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "31d13d95-c64a-4463-bcdc-9a62b94accae",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "aafa0b5b-aa70-4846-a182-9c3a564f9dd0",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "d2bd04b0-91be-43f1-8b24-ab1be4273713",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "01cbab0c-6854-4cdb-9446-ac823f4ec40a",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "bdd9b598-e404-49f7-bff1-badc70fc0c04",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "4bb9c54c-3bcc-4a52-bd50-1cca082522d9",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "d42af0c8-a32b-4164-a5a7-ea39740b9570",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "2cce597a-4ec1-46aa-b309-b7254cb3aec0",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "58e779ee-430d-4814-ba6e-97765cefabcc",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "740d1ae0-acbb-4ed2-b62d-ae6eafdf3566",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "5e3250ca-a3fe-44cb-a880-6ca5360acaf1",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "e8af7270-f6ab-4a41-940a-2406457a2d32",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "d2f1ad29-c195-4c09-a6b1-48e5c06eb2de",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "090a04fb-f4f7-4971-aa7c-6bd29217b36d",
              "parentUUID": "8cd23796-69af-4e46-a9ab-c22161b63b29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7df243b7-1f63-4b84-9733-b15ef92e729c",
            "e3d02773-11f5-4dea-ae18-809f463dff8a",
            "e18ebad1-892e-46b6-af92-813dccbe562d",
            "85c08fdc-b1d1-4287-b484-4a0e7b024a68",
            "31d13d95-c64a-4463-bcdc-9a62b94accae",
            "aafa0b5b-aa70-4846-a182-9c3a564f9dd0",
            "d2bd04b0-91be-43f1-8b24-ab1be4273713",
            "01cbab0c-6854-4cdb-9446-ac823f4ec40a",
            "bdd9b598-e404-49f7-bff1-badc70fc0c04",
            "4bb9c54c-3bcc-4a52-bd50-1cca082522d9",
            "d42af0c8-a32b-4164-a5a7-ea39740b9570",
            "2cce597a-4ec1-46aa-b309-b7254cb3aec0",
            "58e779ee-430d-4814-ba6e-97765cefabcc",
            "740d1ae0-acbb-4ed2-b62d-ae6eafdf3566",
            "5e3250ca-a3fe-44cb-a880-6ca5360acaf1",
            "e8af7270-f6ab-4a41-940a-2406457a2d32",
            "d2f1ad29-c195-4c09-a6b1-48e5c06eb2de",
            "090a04fb-f4f7-4971-aa7c-6bd29217b36d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fdc05e6c-44d1-442e-abb0-3ba0f3099738",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/utilities.spec.js",
      "file": "cypress/integration/2-advanced-examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1cf154a9-b9de-45da-8616-0b5932b351cb",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "7cf4ebb5-0f63-4278-8452-eac7f25968b1",
              "parentUUID": "1cf154a9-b9de-45da-8616-0b5932b351cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "d57d8416-a31e-480f-bf19-411efe1a6abe",
              "parentUUID": "1cf154a9-b9de-45da-8616-0b5932b351cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "ee5f4dd0-dbb5-4ddc-93a7-af8ae603eb99",
              "parentUUID": "1cf154a9-b9de-45da-8616-0b5932b351cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "971e7047-9c4a-45dc-8648-7d05aff8069b",
              "parentUUID": "1cf154a9-b9de-45da-8616-0b5932b351cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "89df97aa-06fd-4cd7-8e87-de85c27af606",
              "parentUUID": "1cf154a9-b9de-45da-8616-0b5932b351cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cf4ebb5-0f63-4278-8452-eac7f25968b1",
            "d57d8416-a31e-480f-bf19-411efe1a6abe",
            "ee5f4dd0-dbb5-4ddc-93a7-af8ae603eb99",
            "971e7047-9c4a-45dc-8648-7d05aff8069b",
            "89df97aa-06fd-4cd7-8e87-de85c27af606"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2900,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "803a6561-f9be-4d66-af16-1805645424cd",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/viewport.spec.js",
      "file": "cypress/integration/2-advanced-examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7bb947c-68ca-47e3-8ea4-7a4f6bd56814",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "d24477be-b177-4b2d-a437-57e1ebb5e0d2",
              "parentUUID": "a7bb947c-68ca-47e3-8ea4-7a4f6bd56814",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d24477be-b177-4b2d-a437-57e1ebb5e0d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "caed2f59-15b9-4d7d-806c-6049f4c80118",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/waiting.spec.js",
      "file": "cypress/integration/2-advanced-examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b1548af-24d0-4bfb-b41f-2ee47568038e",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "bd54be64-13d9-4d3d-a9a6-6e618fbe8398",
              "parentUUID": "3b1548af-24d0-4bfb-b41f-2ee47568038e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "71a3fc07-f337-4f67-88af-75726479883b",
              "parentUUID": "3b1548af-24d0-4bfb-b41f-2ee47568038e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd54be64-13d9-4d3d-a9a6-6e618fbe8398",
            "71a3fc07-f337-4f67-88af-75726479883b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d562fa6-a16d-493a-9fea-a606f1bb00dd",
      "title": "",
      "fullFile": "cypress/integration/2-advanced-examples/window.spec.js",
      "file": "cypress/integration/2-advanced-examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52c4fe34-7e46-4a7e-b995-738f250046ac",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "fe8ce4f0-f244-43f6-a134-3ebde784888b",
              "parentUUID": "52c4fe34-7e46-4a7e-b995-738f250046ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "08672814-789e-40ba-a9ae-6d1032b124f3",
              "parentUUID": "52c4fe34-7e46-4a7e-b995-738f250046ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "aca952cc-6a02-4710-b6b5-280a4c4564b0",
              "parentUUID": "52c4fe34-7e46-4a7e-b995-738f250046ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe8ce4f0-f244-43f6-a134-3ebde784888b",
            "08672814-789e-40ba-a9ae-6d1032b124f3",
            "aca952cc-6a02-4710-b6b5-280a4c4564b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 764,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15800a94-1e90-4356-845b-780dde544e62",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day01_first_test.js",
      "file": "cypress/integration/com.techproed/day01_first_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "65fa2403-a9c9-4dff-b137-d36845bac4aa",
          "title": "My First Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "URL Testi",
              "fullTitle": "My First Test URL Testi",
              "timedOut": null,
              "duration": 1771,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//test'i tanimliyoruz. @Test gibi\n//it('Testin ismi', 'olusturulacak fonksiyonlar')\n//URL adtresinde google var mi?\ncy.visit('https://www.google.com/'); //visit('site adresi') siteye gider\ncy.url().should('include', 'www.google.com'); //url() url testi ici kullanilir.\n//should('iceriyormu', 'xxxxxx')",
              "err": {},
              "uuid": "4566dd95-c1da-4f9d-9982-51d20bbe1543",
              "parentUUID": "65fa2403-a9c9-4dff-b137-d36845bac4aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Title Test",
              "fullTitle": "My First Test Title Test",
              "timedOut": null,
              "duration": 3966,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Title da Google Var mi?\ncy.visit('https://www.google.com/');\ncy.title().should('eq', 'Google');",
              "err": {},
              "uuid": "a341ccdc-31cc-4362-ab0c-bbec83a7ba22",
              "parentUUID": "65fa2403-a9c9-4dff-b137-d36845bac4aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4566dd95-c1da-4f9d-9982-51d20bbe1543",
            "a341ccdc-31cc-4362-ab0c-bbec83a7ba22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "43b12939-8b4a-4981-9435-41289831c13a",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day01_login_test.js",
      "file": "cypress/integration/com.techproed/day01_login_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b38b00f0-646d-46b3-a8c2-ef09bd5cbb7a",
          "title": "Crystal Key Hotel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test 1",
              "fullTitle": "Crystal Key Hotel Test 1",
              "timedOut": null,
              "duration": 10086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://qa-environment.koalaresorthotels.com/'); //seleniumdaki get()\n//login\n//1.yol\n//cy.get('#navLogon > .nav-link').click()\n//2.yol\ncy.contains('Log in').click(); //contains() metni text olarak buluyor\n//userername: 'manager'\ncy.get('#UserName').type('Manager'); //driver.findElement(BycssLocator('#UserNam')).sendKeys('Manager')\n//password: 'Manager2!'\ncy.get('#Password').type('Manager1!');\ncy.get('#btnSubmit').click();",
              "err": {},
              "uuid": "dd576a17-328f-42f0-9bc3-6c0985c12377",
              "parentUUID": "b38b00f0-646d-46b3-a8c2-ef09bd5cbb7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd576a17-328f-42f0-9bc3-6c0985c12377"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89a635ab-b972-4e84-ac8a-bb4ba8cfaf92",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day02_crystal_key.js",
      "file": "cypress/integration/com.techproed/day02_crystal_key.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5996c934-c6aa-4d60-b594-ca2333d60a17",
          "title": "Koala Resort Hotel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case1",
              "fullTitle": "Koala Resort Hotel Test Case1",
              "timedOut": null,
              "duration": 6254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://qa-environment.koalaresorthotels.com/');\ncy.contains('Log in').click(); //ASSERT\n//1) cy.url().should('include'\ncy.url().should('include', 'Account/Logon'); //url 'Account/Logon' iceriyor mu\n//2) have.text\ncy.get('#navLogon > .nav-link').should('have.text', 'Log in'); //locate edilen yerdeki metinde 'Log in' yaziyor mu\n//3) be.visible\ncy.get('.row > .mb-4').should('be.visible'); //locate edilen yerde metin var mi veya gorunur mu\n//4) should('eq'\ncy.title().should('eq', 'KoalaResortHotels - Log in'); // title buna esit mi ->'KoalaResortHotels - Log in'\n// 5) should('include.text' \ncy.get('.row > .mb-4').should('include.text', 'Log in'); // locate edilen yerde 'Log in' text olarak var mi\n//burada include ve have ayni sonucu verir.",
              "err": {},
              "uuid": "0d4695d6-02b9-4e0f-aaa4-2fbca9f6cff8",
              "parentUUID": "5996c934-c6aa-4d60-b594-ca2333d60a17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d4695d6-02b9-4e0f-aaa4-2fbca9f6cff8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "31c953d8-eb3f-4636-b05c-5dc4d11ff68e",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day02_dropdown.js",
      "file": "cypress/integration/com.techproed/day02_dropdown.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0e177e31-7122-4be3-96fa-bf0dce7d5e60",
          "title": "dropdown",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dropdown test",
              "fullTitle": "dropdown dropdown test",
              "timedOut": null,
              "duration": 4762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://the-internet.herokuapp.com/dropdown\"); //option 2 sec\ncy.get('#dropdown').select('Option 1').should('have.value', '1');\ncy.wait(3000); //option 2 sec\ncy.get('#dropdown').select('Option 2').should('have.value', '2');",
              "err": {},
              "uuid": "044ea161-7a10-4030-a96e-1fea93b56bcb",
              "parentUUID": "0e177e31-7122-4be3-96fa-bf0dce7d5e60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "044ea161-7a10-4030-a96e-1fea93b56bcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4762,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "345c5a7b-5870-463e-b8ab-b1e9a4962312",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day02_login_test.js",
      "file": "cypress/integration/com.techproed/day02_login_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec08c30c-f8df-40ad-807d-2e0bd2dc97bf",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login negatif",
              "fullTitle": "Login login negatif",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "fb89115e-34c8-4e56-8381-f6fb4d63ee63",
              "parentUUID": "ec08c30c-f8df-40ad-807d-2e0bd2dc97bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "login pozitif",
              "fullTitle": "Login login pozitif",
              "timedOut": null,
              "duration": 2607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://test.iyikisordun.com/login.php\");\ncy.get('[type=\"email\"]').type(eMail);\ncy.get('[type=\"password\"]').type(pass);\ncy.get('.btn').click();\ncy.get('.m-0').should('have.text', 'Dashboard');\ncy.url().should('include', 'index.php');",
              "err": {},
              "uuid": "37041320-e832-4bf0-b6a1-be5df463bd73",
              "parentUUID": "ec08c30c-f8df-40ad-807d-2e0bd2dc97bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37041320-e832-4bf0-b6a1-be5df463bd73"
          ],
          "failures": [],
          "pending": [
            "fb89115e-34c8-4e56-8381-f6fb4d63ee63"
          ],
          "skipped": [],
          "duration": 2607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "529cce94-a897-4a45-a7f1-d3a3c2feb5b5",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day02_navigasyon.js",
      "file": "cypress/integration/com.techproed/day02_navigasyon.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5fdf3304-6486-4b1a-9732-55722982f53c",
          "title": "Navigasyon",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "back,forward,refresh",
              "fullTitle": "Navigasyon back,forward,refresh",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "59facb20-a6fd-4cf7-a4fe-fac89fde5bfc",
              "parentUUID": "5fdf3304-6486-4b1a-9732-55722982f53c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "zincirleme navigasyon",
              "fullTitle": "Navigasyon zincirleme navigasyon",
              "timedOut": null,
              "duration": 11588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://qa-environment.koalaresorthotels.com/');\ncy.contains('Log in').click().go('back').go('forward').go('back');\ncy.pause();\ncy.reload(true).contains('Log in').should('be.visible');",
              "err": {},
              "uuid": "ff317488-6326-4c3f-bf75-5e5eb928e0c7",
              "parentUUID": "5fdf3304-6486-4b1a-9732-55722982f53c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff317488-6326-4c3f-bf75-5e5eb928e0c7"
          ],
          "failures": [],
          "pending": [
            "59facb20-a6fd-4cf7-a4fe-fac89fde5bfc"
          ],
          "skipped": [],
          "duration": 11588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3a1e214c-dfa8-4221-845d-024caa7dc527",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day03_checkboxes.js",
      "file": "cypress/integration/com.techproed/day03_checkboxes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a028697-2bd8-4df9-990d-ef0b06947ab0",
          "title": "checkboxes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checking single box",
              "fullTitle": "checkboxes checking single box",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e3ae1e14-ab0b-4f53-a323-66c1d21902e4",
              "parentUUID": "5a028697-2bd8-4df9-990d-ef0b06947ab0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check all checkboxes",
              "fullTitle": "checkboxes check all checkboxes",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d06e8196-b45b-465d-8af9-eae8973730d7",
              "parentUUID": "5a028697-2bd8-4df9-990d-ef0b06947ab0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "click",
              "fullTitle": "checkboxes click",
              "timedOut": null,
              "duration": 10591,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://automationpractice.com/index.php');\ncy.get('.sf-with-ul').first().click();\ncy.get(\"input[type='checkbox']\").click({\n  multiple: true\n}); //click({ multiple: true }) -> click() tek elemente uygulanır.\n//birden fazla elemente uygulmak icin { multiple: true } kullanilir.\n//Assert\n//1)\ncy.get(\"input[type='checkbox']\").first().should('be.checked'); //2) \ncy.get(\"input[type='checkbox']\").first().parent().should('have.class', 'checked'); //3)should('have.id', 'username')\n//4)should('have.type', 'text')\n//should('have.class', 'container')",
              "err": {},
              "uuid": "1fe28c3e-a54b-4328-a3b1-850cd2a1ebad",
              "parentUUID": "5a028697-2bd8-4df9-990d-ef0b06947ab0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fe28c3e-a54b-4328-a3b1-850cd2a1ebad"
          ],
          "failures": [],
          "pending": [
            "e3ae1e14-ab0b-4f53-a323-66c1d21902e4",
            "d06e8196-b45b-465d-8af9-eae8973730d7"
          ],
          "skipped": [],
          "duration": 10591,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ee40565-1709-4fb6-8c1a-2ca26fe065f8",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day03_hover_over.js",
      "file": "cypress/integration/com.techproed/day03_hover_over.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "24872f10-fa16-4e9d-81e5-7d52600883ea",
          "title": "hover over",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "move over",
              "fullTitle": "hover over move over",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "0407b1fc-0201-4233-a515-60c4b30bdfe1",
              "parentUUID": "24872f10-fa16-4e9d-81e5-7d52600883ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "0407b1fc-0201-4233-a515-60c4b30bdfe1"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a18b000c-c80a-44a7-a78f-bf629c8a8c2e",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day03_scroll.js",
      "file": "cypress/integration/com.techproed/day03_scroll.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd893bb7-40df-4b47-9185-fa0a5cbf0a18",
          "title": "scroll",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "scroll into view",
              "fullTitle": "scroll scroll into view",
              "timedOut": null,
              "duration": 22689,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://qa-environment.koalaresorthotels.com');\ncy.get('.col-md-7 > .mb-4').scrollIntoView();\ncy.wait(3000); // scrollIntoView()-> locate edilen yere gider\ncy.get(':nth-child(9) > .container > .justify-content-center > .col-md-7 > h2').scrollIntoView();\ncy.wait(3000);\ncy.get('.col-md-7 > h2 > span').scrollIntoView();\ncy.scrollTo('bottom'); //en asagiya git\ncy.wait(3000);\ncy.scrollTo('top'); // en yukariya git\ncy.wait(3000);\ncy.scrollTo(0, 1000); //1000px down\ncy.wait(3000);\ncy.scrollTo(0, -500); //500px up",
              "err": {},
              "uuid": "9d9f7f0f-864a-4e0b-9b3a-ab4dd4b023f6",
              "parentUUID": "bd893bb7-40df-4b47-9185-fa0a5cbf0a18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d9f7f0f-864a-4e0b-9b3a-ab4dd4b023f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "156ab34d-19a4-481d-b92e-c552971468df",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day04_alerts.js",
      "file": "cypress/integration/com.techproed/day04_alerts.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07cf1cec-acad-4bb6-870d-3e8a9cb7a395",
          "title": "allerts",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "alert test",
              "fullTitle": "allerts alert test",
              "timedOut": null,
              "duration": 1558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Cypress otomatik olarak allert button tiklamalarini onaylar.\ncy.visit('https://the-internet.herokuapp.com/javascript_alerts');\ncy.get(':nth-child(1) > button').click();\ncy.get('#result').should('have.text', 'You successfully clicked an alert');",
              "err": {},
              "uuid": "408a4b7a-7581-4056-8839-98912dd18cd9",
              "parentUUID": "07cf1cec-acad-4bb6-870d-3e8a9cb7a395",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "accept alert Test",
              "fullTitle": "allerts accept alert Test",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/javascript_alerts'); //2. buttona tikliyoruz (Click for JS Confirm)\n//2 secenek cikiyor. iptal ve tamam\n//cypress otomatik olarak tamam'i kabul ediyor\ncy.get(':nth-child(2) > button').click();\ncy.get('#result').should('have.text', 'You clicked: Ok');",
              "err": {},
              "uuid": "e6858bb6-33b8-457d-9b91-777837be2cb4",
              "parentUUID": "07cf1cec-acad-4bb6-870d-3e8a9cb7a395",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dismiss alert",
              "fullTitle": "allerts dismiss alert",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/javascript_alerts');\ncy.get(':nth-child(2) > button').click(); //cypres otomatik olarak tamam butonuna tikladi\n//ama iptal butonunu secmek istiyoruz\n//browser controlu icin on() funksiyonu kullanacagiz\n//on()-> jquery bir fonksiyondur\n//window(object):confirm(functionality)\ncy.on('window:confirm', str => {\n  return false; //return true -> default olarak tamam tikla demek\n});\ncy.get('#result').should('have.text', 'You clicked: Cancel');",
              "err": {},
              "uuid": "ffd5f503-11f0-42a9-bf64-e2bf62c7f138",
              "parentUUID": "07cf1cec-acad-4bb6-870d-3e8a9cb7a395",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "entering text on the allert",
              "fullTitle": "allerts entering text on the allert",
              "timedOut": null,
              "duration": 4356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//3. buttom'a tikla (Click for JS Promt)\n//'Hi' yaz. Ok'e tikla\ncy.visit('https://the-internet.herokuapp.com/javascript_alerts');\ncy.window() //pop up pencereleri kontrol ediyoruz\n.then($windowElement => {\n  //$windowElement -> promt'a bilgi girisi\n  cy.stub($windowElement, 'prompt').returns('Hi');\n  cy.wait(4000);\n  cy.get(':nth-child(3) > button').click();\n});\ncy.get('#result').should('have.text', 'You entered: Hi');",
              "err": {},
              "uuid": "927a63dd-33b7-49ec-93d1-453d19e826c6",
              "parentUUID": "07cf1cec-acad-4bb6-870d-3e8a9cb7a395",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "408a4b7a-7581-4056-8839-98912dd18cd9",
            "e6858bb6-33b8-457d-9b91-777837be2cb4",
            "ffd5f503-11f0-42a9-bf64-e2bf62c7f138",
            "927a63dd-33b7-49ec-93d1-453d19e826c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0717733a-5606-4f2c-9c14-db1b342a3ef1",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day04_draganddrop.js",
      "file": "cypress/integration/com.techproed/day04_draganddrop.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87564b04-3f88-4342-b088-9d12d3bf5923",
          "title": "drag and drop",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "double click",
              "fullTitle": "drag and drop double click",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "38c1ee4a-1cd6-45b1-832e-45a42459d27f",
              "parentUUID": "87564b04-3f88-4342-b088-9d12d3bf5923",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "drag and drop",
              "fullTitle": "drag and drop drag and drop",
              "timedOut": null,
              "duration": 967,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// 1) Terminalden: npm install --save-dev @4tw/cypress-drag-drop\n// 2) import '@4tw/cypress-drag-drop'\ncy.visit('https://www.testandquiz.com/selenium/testing.html');\ncy.get('#sourceImage') //suruklenecek element\n.drag('#targetDiv'); //suruklenecegi yer",
              "err": {},
              "uuid": "4d4b3974-82a4-4193-9bf5-d09d6d75c208",
              "parentUUID": "87564b04-3f88-4342-b088-9d12d3bf5923",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d4b3974-82a4-4193-9bf5-d09d6d75c208"
          ],
          "failures": [],
          "pending": [
            "38c1ee4a-1cd6-45b1-832e-45a42459d27f"
          ],
          "skipped": [],
          "duration": 967,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a802d5c0-feaa-4976-bc50-c5aabcbad5a1",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day04_iframe.js",
      "file": "cypress/integration/com.techproed/day04_iframe.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1cde4125-90e4-467e-92af-e92ed3273715",
          "title": "iframes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "iframe",
              "fullTitle": "iframes iframe",
              "timedOut": null,
              "duration": 3798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/iframe');\ncy.get('h3').should('contain', 'Editor');\ncy.frameLoaded('#mce_0_ifr'); //diver.switchto.frame('.mce_0_ifr') ->Selenium\n//frameLoaded('locator') iframe'in yerini tanimliyoruz\n//iframe'i yukle\ncy.iframe().find('p').clear(); //iframe git\n//find('p') p tag'ini bul\n//clear\ncy.iframe().find('p').type('Hello World');\ncy.get('.large-4 > div > a').should('contain.text', 'Elemental Selenium');\ncy.get('.large-4 > div > a').should('contain.text', 'Elemental Selenium').click();",
              "err": {},
              "uuid": "39906ff3-90f4-4f91-bea5-211f1361d23e",
              "parentUUID": "1cde4125-90e4-467e-92af-e92ed3273715",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39906ff3-90f4-4f91-bea5-211f1361d23e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "34724ab1-e294-4eed-814e-1d067db2bb5d",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day04_multiple_windows.js",
      "file": "cypress/integration/com.techproed/day04_multiple_windows.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "088e3b7b-aefc-4cc9-974f-ab729c28be7e",
          "title": "multiple windows",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "removing target",
              "fullTitle": "multiple windows removing target",
              "timedOut": null,
              "duration": 4349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/windows');\ncy.wait(3000);\ncy.get('.example > a').invoke('removeAttr', 'target').click(); //invoke('removeAttr', 'Atribute Name')\n// attribute siliyor.\n//yeni sekme acmiyor. tiklandiginda ayni sekmede aciyor\ncy.get('h3').should('have.text', 'New Window');",
              "err": {},
              "uuid": "fa101f35-c3ab-47cf-916e-a50bf9d8fda1",
              "parentUUID": "088e3b7b-aefc-4cc9-974f-ab729c28be7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "yeni urlde acma",
              "fullTitle": "multiple windows yeni urlde acma",
              "timedOut": null,
              "duration": 3443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://the-internet.herokuapp.com/windows');\ncy.wait(3000); // prop() ile 'href' degerini aldik\n// prop()-> jquery, attribute degerini alan bir method\ncy.get('.example > a').then(element => {\n  const newURL = element.prop('href');\n  cy.visit(newURL);\n});\ncy.get('h3').should('have.text', 'New Window');",
              "err": {},
              "uuid": "2a7328a6-5feb-4ed3-8890-09815a59a3dd",
              "parentUUID": "088e3b7b-aefc-4cc9-974f-ab729c28be7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa101f35-c3ab-47cf-916e-a50bf9d8fda1",
            "2a7328a6-5feb-4ed3-8890-09815a59a3dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7792,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e932343a-a113-448c-85ca-ab02be10f141",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day05_amazon_search.js",
      "file": "cypress/integration/com.techproed/day05_amazon_search.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53d9af17-9344-4aa0-a59b-98df2388a07e",
          "title": "search",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "amazon search",
              "fullTitle": "search amazon search",
              "timedOut": null,
              "duration": 7326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//cy.amazonSearch('imac')\ncy.amazonSearch('iphone'); //cy.get('.a-section > .a-color-state').should('have.text', '\"imac\"' )\ncy.get('.a-section > .a-color-state').should('include.text', 'iphone');",
              "err": {},
              "uuid": "6f2644cb-7ef7-4c4d-a71a-5b053261bfac",
              "parentUUID": "53d9af17-9344-4aa0-a59b-98df2388a07e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f2644cb-7ef7-4c4d-a71a-5b053261bfac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7326,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7975a16-230d-4e3b-b652-455c22e47492",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day05_custom_method.js",
      "file": "cypress/integration/com.techproed/day05_custom_method.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50a0003b-f352-4e07-aac6-039c525cd818",
          "title": "custom method",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login",
              "fullTitle": "custom method login",
              "timedOut": null,
              "duration": 7833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('123murat123@gmail.com', '123murat123'); //login -> commands.js de tanimlanan method\n//commands.js'de tanimlandigi icin framework'ten ulasabiliyoruz",
              "err": {},
              "uuid": "27d3a76d-d8bf-4c72-ad64-c822f5a2f450",
              "parentUUID": "50a0003b-f352-4e07-aac6-039c525cd818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "negative log in",
              "fullTitle": "custom method negative log in",
              "timedOut": null,
              "duration": 5812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('123murat12@gmail.com', '123murat123');\ncy.contains('Authentication failed').should('be.visible');\ncy.url().should('include', 'controller=authentication');\ncy.screenshot();",
              "err": {},
              "uuid": "c772e097-8654-4a2e-a9df-340627ed337f",
              "parentUUID": "50a0003b-f352-4e07-aac6-039c525cd818",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27d3a76d-d8bf-4c72-ad64-c822f5a2f450",
            "c772e097-8654-4a2e-a9df-340627ed337f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13645,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7b2935b-cc46-4923-af2c-109edfb49e1c",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day05_file_upload.js",
      "file": "cypress/integration/com.techproed/day05_file_upload.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "43082d6f-f70f-400f-96d3-385ff629af3b",
          "title": "file upload",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "tek dosya yukleme",
              "fullTitle": "file upload tek dosya yukleme",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "11d738e6-da7a-4fc1-b65f-9cbd4913f255",
              "parentUUID": "43082d6f-f70f-400f-96d3-385ff629af3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coklu dosya yukleme",
              "fullTitle": "file upload coklu dosya yukleme",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "731a7505-8b10-4131-820b-0c93b0141bfc",
              "parentUUID": "43082d6f-f70f-400f-96d3-385ff629af3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coklu dosya yukleme",
              "fullTitle": "file upload coklu dosya yukleme",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6268529b-dee8-42e0-99c9-8fab0d2681ab",
              "parentUUID": "43082d6f-f70f-400f-96d3-385ff629af3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "override file name",
              "fullTitle": "file upload override file name",
              "timedOut": null,
              "duration": 1530,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://davidwalsh.name/demo/multiple-file-upload.php');\nconst path1 = 'image01.jpeg';\ncy.get('#filesToUpload').attachFile({\n  filePath: path1,\n  fileName: 'image.jpeg'\n});\ncy.contains(\"image.jpeg\").should(\"be.visible\");\ncy.get('#fileList > li').contains('image.jpeg').should('be.visible');",
              "err": {},
              "uuid": "407139b5-51b0-4d49-8d42-5a94eea76821",
              "parentUUID": "43082d6f-f70f-400f-96d3-385ff629af3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "407139b5-51b0-4d49-8d42-5a94eea76821"
          ],
          "failures": [],
          "pending": [
            "11d738e6-da7a-4fc1-b65f-9cbd4913f255",
            "731a7505-8b10-4131-820b-0c93b0141bfc",
            "6268529b-dee8-42e0-99c9-8fab0d2681ab"
          ],
          "skipped": [],
          "duration": 1530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9edd353a-cc8c-4318-b100-dfb65a09a85d",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day06_hooks.js",
      "file": "cypress/integration/com.techproed/day06_hooks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c87ce219-922d-4962-8d1a-8942c5375980",
          "title": "hooks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test 1",
              "fullTitle": "hooks test 1",
              "timedOut": null,
              "duration": 4172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Log in').click();",
              "err": {},
              "uuid": "f4216b49-9fcd-481f-b30b-513a8a5f65a5",
              "parentUUID": "c87ce219-922d-4962-8d1a-8942c5375980",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4216b49-9fcd-481f-b30b-513a8a5f65a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ec8dc8d-8603-4822-8429-a708a3c56d48",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day06_viewpert.js",
      "file": "cypress/integration/com.techproed/day06_viewpert.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eb4727b2-c634-417d-a84d-f9fa9a47f6c2",
          "title": "Viewports",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "iphone8",
              "fullTitle": "Viewports iphone8",
              "timedOut": null,
              "duration": 2551,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.amazon.com');\ncy.viewport('iphone-8');\ncy.screenshot;",
              "err": {},
              "uuid": "18935c73-03e5-494c-afc7-3c05c5f7a180",
              "parentUUID": "eb4727b2-c634-417d-a84d-f9fa9a47f6c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "imac",
              "fullTitle": "Viewports imac",
              "timedOut": null,
              "duration": 1874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.amazon.com');\ncy.viewport('macbook-16');\ncy.screenshot;",
              "err": {},
              "uuid": "64247e46-e3b9-4f2a-b3ed-f0a6d3db7aa6",
              "parentUUID": "eb4727b2-c634-417d-a84d-f9fa9a47f6c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "custom",
              "fullTitle": "Viewports custom",
              "timedOut": null,
              "duration": 1586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://www.amazon.com');\ncy.viewport(2500, 1500);\ncy.screenshot;",
              "err": {},
              "uuid": "077b3884-bbfb-4997-8f41-e98b2e590c50",
              "parentUUID": "eb4727b2-c634-417d-a84d-f9fa9a47f6c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18935c73-03e5-494c-afc7-3c05c5f7a180",
            "64247e46-e3b9-4f2a-b3ed-f0a6d3db7aa6",
            "077b3884-bbfb-4997-8f41-e98b2e590c50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abe194ef-0ac7-40af-a0cf-7e7ed0891434",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day07_paylin_bank_with_fixture.js",
      "file": "cypress/integration/com.techproed/day07_paylin_bank_with_fixture.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "03babc0b-34d9-4d70-9baa-275a5ee8c294",
          "title": "Paylinn Bank",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "paylinn login test",
              "fullTitle": "Paylinn Bank paylinn login test",
              "timedOut": null,
              "duration": 10477,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//URL'e git\ncy.visit('https://www.paylinn.com/'); //Sign In'e click\ncy.contains('Sign In').click(); //username gir\ncy.get(':nth-child(1) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type(this.data.username); //username girildigini dogrula\n//value attribute dogrulayacagiz\n//<input aria-invalid=\"true\" name=\"username\" type=\"text\" class=\"MuiInputBase-input MuiInput-input\" value=\"\">\n//<input aria-invalid=\"false\" name=\"username\" type=\"text\" class=\"MuiInputBase-input MuiInput-input\" value=\"User\">\ncy.get(':nth-child(1) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').should('have.attr', 'value', this.data.username); //password gir\ncy.get(':nth-child(2) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type(this.data.password); //password girildigini dogrula\ncy.get(':nth-child(2) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').should('have.attr', 'value', this.data.password); //sign In butonuna tikla\ncy.get('.MuiButton-label').click(); //giris yapildigini onayla\ncy.get('.header__nav > :nth-child(1) > .header__lineOne').should('contain.text', 'Welcome'); //giris yapildigini assert etme\ncy.get('.header__nav').should('contain.text', 'Welcome').and('contain.text', 'React').and('contain.text', 'Logout').and('contain.text', this.data.username);",
              "err": {},
              "uuid": "bec0f65e-d257-49a8-af7a-78313faa4c67",
              "parentUUID": "03babc0b-34d9-4d70-9baa-275a5ee8c294",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bec0f65e-d257-49a8-af7a-78313faa4c67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "53fcf166-6d9c-4851-8c89-fe56efc75244",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day07_paylinn_login.js",
      "file": "cypress/integration/com.techproed/day07_paylinn_login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bcdcdc81-fa18-498f-a64a-e97b83075f5e",
          "title": "Paylinn Bank",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "paylinn login test",
              "fullTitle": "Paylinn Bank paylinn login test",
              "timedOut": null,
              "duration": 8297,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//URL'e git\ncy.visit('https://www.paylinn.com/'); //Sign In'e click\ncy.contains('Sign In').click(); //username gir\ncy.get(':nth-child(1) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type('User'); //password gir\ncy.get(':nth-child(2) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type('user'); //sign In butonuna tikla\ncy.get('.MuiButton-label').click(); //giris yapildigini onayla\ncy.get('.header__nav > :nth-child(1) > .header__lineOne').should('contain.text', 'Welcoem');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.header__lineOne>' to contain text 'Welcoem', but the text was 'Welcome'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.header__lineOne>' to contain text 'Welcoem', but the text was 'Welcome'\n    at Context.eval (https://www.paylinn.com/__cypress/tests?p=cypress/integration/com.techproed/day07_paylinn_login.js:113:63)",
                "diff": "- 'Welcome'\n+ 'Welcoem'\n"
              },
              "uuid": "87be2005-bc23-4b47-b7c8-75eaa5b0a531",
              "parentUUID": "bcdcdc81-fa18-498f-a64a-e97b83075f5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87be2005-bc23-4b47-b7c8-75eaa5b0a531"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "72386af8-6cd1-4aeb-a11f-642080b27c08",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day08_POM_TEST.js",
      "file": "cypress/integration/com.techproed/day08_POM_TEST.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6cfb63b-d78f-448a-9bc3-9a4b1e4077d9",
          "title": "Paylinn Bank",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "paylinn login test",
              "fullTitle": "Paylinn Bank paylinn login test",
              "timedOut": null,
              "duration": 7859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//page object olusturma\nconst homePage = new _HomePage.default(); //loginPage object olusturma\nconst loginPage = new _LoginPage.default(); //URL'e git\ncy.visit('https://www.paylinn.com/'); //Sign In'e click\nhomePage.getSigninLink().click(); //username gir\nloginPage.getUserNameBox().type(this.data.username); //username girildigini dogrula\nloginPage.getUserNameBox().should('have.attr', 'value', this.data.username); //password gir\nloginPage.getPasswordBox().type(this.data.password); //password girildigini dogrula\nloginPage.getPasswordBox().should('have.attr', 'value', this.data.password); //sign In butonuna tikla\nloginPage.getLoginButton().click(); //giris yapildigini onayla\nloginPage.getWelcomeText().should('contain.text', 'Welcome'); //giris yapildigini assert etme\nloginPage.getNavbarHeader().should('contain.text', 'Welcome').and('contain.text', 'React').and('contain.text', 'Logout').and('contain.text', this.data.username);",
              "err": {},
              "uuid": "684a9ad5-0cc4-4c90-bf86-c9df866e59be",
              "parentUUID": "c6cfb63b-d78f-448a-9bc3-9a4b1e4077d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "684a9ad5-0cc4-4c90-bf86-c9df866e59be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7859,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fd2013d7-7f44-43bf-be92-9ff061cd7b01",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day09_XHR1.js",
      "file": "cypress/integration/com.techproed/day09_XHR1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2300b533-46b4-44d8-8613-07b7d83c7ce1",
          "title": "XHR - XML, HTTP, Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "XHR Example 1",
              "fullTitle": "XHR - XML, HTTP, Request XHR Example 1",
              "timedOut": null,
              "duration": 606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(requestUrl).should(response => {\n  console.log(response);\n  assert.equal(response.status, 200);\n  expect(response.statusText).to.eq('OK');\n});",
              "err": {},
              "uuid": "32cddae7-1483-4506-ada5-7bec477f2e13",
              "parentUUID": "2300b533-46b4-44d8-8613-07b7d83c7ce1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32cddae7-1483-4506-ada5-7bec477f2e13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29569fc3-cf24-4687-87c0-26fdf911b1bb",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day09_XHR2.js",
      "file": "cypress/integration/com.techproed/day09_XHR2.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8f5ed93-e494-428f-b15f-c76679c62a62",
          "title": "XHR - XML, HTTP, Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "XHR Example 2",
              "fullTitle": "XHR - XML, HTTP, Request XHR Example 2",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('POST', requestUrl, {\n  userId: 501,\n  title: \"Cypres cok kolay\",\n  body: \"JavaScript daha da kolay\"\n}).then(response => {\n  console.log(response);\n  expect(response.status).to.eq(201);\n  expect(response).property('body').to.contain({\n    title: \"Cypres cok kolay\"\n  });\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "a6c744de-64f7-487e-98df-4f59b911860a",
              "parentUUID": "b8f5ed93-e494-428f-b15f-c76679c62a62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6c744de-64f7-487e-98df-4f59b911860a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ac099c4-853e-4777-aa2c-7011352db147",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/day09_XHR3.js",
      "file": "cypress/integration/com.techproed/day09_XHR3.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d10c54c-7159-4ab5-a653-4639d3058a94",
          "title": "XHR - XML, HTTP, Request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "XHR Example 3",
              "fullTitle": "XHR - XML, HTTP, Request XHR Example 3",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/waiting');\ncy.intercept('GET', '**/comments/*').as('getComment'); //networku dinle\n//as -> degisken atiyor. daha sonra @ ile kullamilir\ncy.get('.network-btn').click();\ncy.wait('@getComment').its('response').then(response => {\n  console.log(response);\n  assert.equal(response.statusCode, 200, 'Status Code Control');\n});",
              "err": {},
              "uuid": "83bfd5f9-9735-4e5f-9439-705d961fb90c",
              "parentUUID": "4d10c54c-7159-4ab5-a653-4639d3058a94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83bfd5f9-9735-4e5f-9439-705d961fb90c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f3ebad15-769e-41a7-afee-882be413d379",
      "title": "",
      "fullFile": "cypress/integration/com.techproed/test.js",
      "file": "cypress/integration/com.techproed/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4c43264-98be-4944-889b-337de72014c1",
          "title": "",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test 1",
              "fullTitle": " test 1",
              "timedOut": null,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "427d455e-48b7-400d-a215-927f2c3e9a25",
              "parentUUID": "e4c43264-98be-4944-889b-337de72014c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test 2",
              "fullTitle": " test 2",
              "timedOut": null,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e0bf022c-305c-41fa-844a-721bc1e925f4",
              "parentUUID": "e4c43264-98be-4944-889b-337de72014c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "427d455e-48b7-400d-a215-927f2c3e9a25",
            "e0bf022c-305c-41fa-844a-721bc1e925f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2a43a1f0-3f53-4a05-b8f3-8cf67aa8615f",
      "title": "",
      "fullFile": "cypress/integration/smoke-test/day01_login_test.js",
      "file": "cypress/integration/smoke-test/day01_login_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a52a4613-2e98-4f96-aa9a-e131f03e0b05",
          "title": "Crystal Key Hotel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test 1",
              "fullTitle": "Crystal Key Hotel Test 1",
              "timedOut": null,
              "duration": 11516,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://qa-environment.koalaresorthotels.com/'); //seleniumdaki get()\n//login\n//1.yol\n//cy.get('#navLogon > .nav-link').click()\n//2.yol\ncy.contains('Log in').click(); //contains() metni text olarak buluyor\n//userername: 'manager'\ncy.get('#UserName').type('Manager'); //driver.findElement(BycssLocator('#UserNam')).sendKeys('Manager')\n//password: 'Manager2!'\ncy.get('#Password').type('Manager1!');\ncy.get('#btnSubmit').click();",
              "err": {},
              "uuid": "3e3537fc-d7d4-408b-a07e-a36323ea29fc",
              "parentUUID": "a52a4613-2e98-4f96-aa9a-e131f03e0b05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e3537fc-d7d4-408b-a07e-a36323ea29fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc0fc1d9-c280-4933-9b16-0e91a976bac6",
      "title": "",
      "fullFile": "cypress/integration/smoke-test/day07_paylinn_login.js",
      "file": "cypress/integration/smoke-test/day07_paylinn_login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1406d848-533d-4f90-9e85-e5c30a13a4ad",
          "title": "Paylinn Bank",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "paylinn login test",
              "fullTitle": "Paylinn Bank paylinn login test",
              "timedOut": null,
              "duration": 8327,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//URL'e git\ncy.visit('https://www.paylinn.com/'); //Sign In'e click\ncy.contains('Sign In').click(); //username gir\ncy.get(':nth-child(1) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type('User'); //password gir\ncy.get(':nth-child(2) > .MuiFormControl-root > .MuiInputBase-root > .MuiInputBase-input').type('user'); //sign In butonuna tikla\ncy.get('.MuiButton-label').click(); //giris yapildigini onayla\ncy.get('.header__nav > :nth-child(1) > .header__lineOne').should('contain.text', 'Welcoem');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<span.header__lineOne>' to contain text 'Welcoem', but the text was 'Welcome'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<span.header__lineOne>' to contain text 'Welcoem', but the text was 'Welcome'\n    at Context.eval (https://www.paylinn.com/__cypress/tests?p=cypress/integration/smoke-test/day07_paylinn_login.js:113:63)",
                "diff": "- 'Welcome'\n+ 'Welcoem'\n"
              },
              "uuid": "eb9acb6a-485d-46eb-9f01-0f288f5ae77a",
              "parentUUID": "1406d848-533d-4f90-9e85-e5c30a13a4ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eb9acb6a-485d-46eb-9f01-0f288f5ae77a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "5.2.0"
    }
  }
}